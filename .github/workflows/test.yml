name: jami-store-requests-manager
run-name: New organization request from ${{ github.actor }}
on:
  issue_comment:
    types: [created, edited]
jobs:
  set-up:
    if: contains(github.event.issue.labels.*.name, 'new organization request') && startsWith(github.event.comment.body, '/csr')
    runs-on:  ubuntu-latest
    outputs:
      attachements: ${{ steps.verify_attached_csr.outputs.result }}
      repo: ${{ steps.repo.outputs.result }}
    steps:
      - name: verify the CSR file is attached
        id: verify_attached_csr
        uses: actions/github-script@v6
        with:
          script: |
            const regex = /https:\/\/github\.com\/.*\/files\/.*\/*.gz/;
            const comment = ${{ toJSON(github.event.comment) }};
            const attachements = comment.body.match(regex);
            return attachements;
      - name: get-repo-base-name
        id: repo
        uses: actions/github-script@v6
        with:
          script: |
            const repo = "${{ github.repository }}"
            baseName = repo.split("/").at(-1);
            return baseName;
  print-attachement:
    runs-on:  ubuntu-latest
    needs: [set-up]
    steps:
      - name: print
        run: echo ${{ toJSON(needs.set-up.outputs.attachements)[0] }}
  handle-bad-csr:
    runs-on:  ubuntu-latest
    permissions:
      issues: write
    needs: [set-up]
    if: needs.set-up.outputs.attachements == 'null'
    steps:
      - name: ask to upload the CSR file
        uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            @${{ github.actor }} Please upload your CSR file to your comment and verify that your file is a gz.
  verify-csr:
    if: needs.set-up.outputs.attachements != 'null'
    runs-on:  ubuntu-latest
    permissions:
      issues: write
    needs: [set-up]
    steps:
      - name: comment-verification-in-progress
        uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            CSR file uploaded, verification in progress
      - name: add label to process the request
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: ${{ github.event.issue.number }},
              owner: "${{ github.repository_owner}}",
              repo: ${{ needs.set-up.outputs.repo }},
              labels: ['csr verification in progress']
            })
      - name: request verify the csr
        id: request-verify-csr
        run: |
          csr_verification=$(wget -O - -o /dev/null ${{ fromJSON(needs.set-up.outputs.attachements)[0] }} | tar -xz -O org.csr | openssl req -noout  -verify)
          echo "$test={csr_verification}" >> $GITHUB_OUTPUT
      - name: print
        run: echo ${{ toJSON(steps.request-verify-csr.outputs) }}
      - name: handle error
        if: endsWith(steps.request-verify-csr.outputs, 'OK') == false
        id: request-verify-csr-error
        uses: actions/github-script@v6
        with: 
          script: |
            github.rest.issues.createComment({
              issue_number: parseInt("${{ github.event.issue.number }}"),
              owner: "${{ github.repository_owner}}",
              repo: ${{ needs.set-up.outputs.repo }},
              body: 'CSR is invalid, Please retry'
            })
            github.rest.issues.addLabels({
              issue_number: parseInt("${{ github.event.issue.number }}"),
              owner: "${{ github.repository_owner}}",
              repo: ${{ needs.set-up.outputs.repo }},
              labels: ['invalid csr']
            })
      - name: handle success when requesting verify the csr
        if: endsWith(steps.request-verify-csr.outputs, 'OK')
        run: |
          github.rest.issues.createComment({
            issue_number: parseInt("${{ github.event.issue.number }}"),  
            owner: "${{ github.repository_owner}}",
            repo: ${{ needs.set-up.outputs.repo }},
            body: '${{ github.actor}}, your certificate signing request is valid. Please wait for a store manager to process your request.'
          })
          github.rest.issues.addLabels({
            issue_number: parseInt("${{ github.event.issue.number }}"),
            owner: "${{ github.repository_owner}}",
            repo: ${{ needs.set-up.outputs.repo }},
            labels: ['valid csr']
          })
          github.rest.issues.removeLabel({
            issue_number: parseInt("${{ github.event.issue.number }}"),
            owner: "${{ github.repository_owner}}",
            repo: ${{ needs.set-up.outputs.repo }},
            labels: 'invalid csr'
          })
          github.rest.issues.removeLabel({
            issue_number: parseInt("${{ github.event.issue.number }}"),
            owner: "${{ github.repository_owner}}",
            repo: ${{ needs.set-up.outputs.repo }},
            labels: 'invalid csr'
          })
      - name: remove label to process the request
        run: |
          github.rest.issues.removeLabel({
              issue_number: parseInt("${{ github.event.issue.number }}"),
              owner: "${{ github.repository_owner}}",
              repo: ${{ needs.set-up.outputs.repo }},
              name: 'verification in progress'
            })
