name: jami-store-requests-manager
on:
  issue_comment:
    types: [created, edited]

jobs:
  verify-csr:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'new organization request') && startsWith(github.event.comment.body, '/csr')

    steps:
      - name: Verify the CSR file is attached
        id: verify_attached_csr
        uses: actions/github-script@v6
        with:
          script: |
            const regex = /https:\/\/github\.com\/.*\/files\/.*/;
            const comment = ${{ toJSON(github.event.comment) }};
            const attachments = comment.body.match(regex);
            return { attachments };

      - name: Get repo base name
        id: repo
        uses: actions/github-script@v6
        with:
          script: |
            const repo = "${{ github.repository }}";
            const baseName = repo.split("/").at(-1);
            return { baseName };

      - name: Ask to upload the CSR file
        if: ${{ steps.verify_attached_csr.outputs.attachments.length == 0 }}
        uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            @${{ github.actor }} Please upload your CSR file to your comment.

      - name: Comment verification in progress
        if: steps.verify_attached_csr.outputs.attachments.length == 1
        uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            CSR file uploaded, verification in progress.

      - name: add label to process the request
        if: steps.verify_attached_csr.outputs.result.attachements.length == 1
        uses: actions/github-script@v6
        with:
          script: |
            console.log(${{ steps.repo }});
            github.rest.issues.addLabels({
              issue_number: parseInt("${{ github.event.issue.number }}"),
              owner: "${{ github.repository_owner}}",
              repo: "${{ steps.repo.outputs.baseName }}",
              labels: ['csr verification in progress']
            })
      - name: request verify the csr
        id: request-verify-csr
        if: steps.verify_attached_csr.outputs.result.attachements.length == 1
        uses: actions/github-script@v6
        with:
          script: curl -s ${{ steps.verify_attached_csr.outputs.result[0] }} | tar -xz -O csr.pem | openssl req -noout -text
      - name: handle error
        if: steps.verify_attached_csr.outputs.result.length == 1 && contains(steps.request-verify-csr.outputs.result, 'OK') == false
        id: request-verify-csr-error
        run: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'CSR is invalid, Please retry'
            })
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['invalid csr']
            })
      - name: handle success when requesting verify the csr
        if: endsWith(steps.request-verify-csr.outputs.result, 'OK') && steps.verify_attached_csr.outputs.result.attachements.length == 1
        run: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '${{ github.actor}}, your certificate signing request is valid. Please wait for a store manager to process your request.'
          })
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['valid csr']
          })
          github.rest.issues.removeLabel({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: 'invalid csr'
          })
      - name: remove label to process the request
        if: steps.verify_attached_csr.outputs.result.attachements.length == 1
        run: |
          github.rest.issues.removeLabel({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'verification in progress'
            })
